<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>What’s new in Ansible Automation Platform 2.2</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/05/26/whats-new-ansible-automation-platform-22" /><author><name>Don Schenck</name></author><id>b36c1da4-5a9c-4beb-a73b-271f93dd4dcf</id><updated>2022-05-26T15:30:00Z</updated><published>2022-05-26T15:30:00Z</published><summary type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/ansible/overview"&gt;Red Hat Ansible Automation Platform&lt;/a&gt; is a Red Hat offering based on &lt;a href="https://www.ansible.com/overview/it-automation"&gt;Ansible&lt;/a&gt; that allows you to configure your systems via code, and version 2.2 is now generally available. Whether you want to install a framework, deploy an application, or tweak some network settings, Ansible Automation Platform is the easiest way to get the job done.&lt;/p&gt; &lt;p&gt;Ansible Automation Platform works with &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt; too, which means you can bring network administration experience from virtual machine (VM) environments to the brave new world of &lt;a href="https://developers.redhat.com/topics/containers"&gt;containers&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/microservices"&gt;microservices&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Here's a list of what's new for Ansible Automation Platform 2.2:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A topology viewer&lt;/li&gt; &lt;li&gt;More powerful developer tooling&lt;/li&gt; &lt;li&gt;Enhancements to network automation&lt;/li&gt; &lt;li&gt;Streamlined integration with &lt;a href="https://www.redhat.com/en/technologies/management/insights"&gt;Red Hat Insights&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Evolving support in &lt;a href="https://developers.redhat.com/products/rhel"&gt;Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Chain-of-custody tracking via digitally-signed components&lt;/li&gt; &lt;li&gt;An automation services catalog as a self-hosted, on-premises offering&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Let's dive into the details for each of these.&lt;/p&gt; &lt;h2&gt;Topology viewer&lt;/h2&gt; &lt;p&gt;The Ansible Automation Platform topology viewer (Figure 1) allows you to see your overlay network and the results of Ansible automation. The visual layout makes support and troubleshooting easier while providing you with a big-picture view.&lt;/p&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/fig1_7.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/fig1_7.png?itok=EtrLIb_5" width="367" height="388" alt="Screenshot of the topology viewer, which shows the relationships between your resources." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 1: The topology viewer shows the relationships between your resources. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;h2&gt;More powerful developer tooling&lt;/h2&gt; &lt;p&gt;Ansible now has ansible-lint, which works like any good code linter to highlight errors, promote best practices, and reduce mistakes. ansible-lint also acts as an assistant if you're upgrading from an older (1.2) version of Ansible Automation Platform—which has an end-of-life date of September 2023.&lt;/p&gt; &lt;p&gt;There's also ansible-navigator 2.0, which brings other added capabilities to the table as well:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Pass-through control of ansible-builder, along with experimental pass-through control of ansible-lint&lt;/li&gt; &lt;li&gt;Simple settings management of modified and active ansible-navigator configurations within Visual Studio Code&lt;/li&gt; &lt;li&gt;Native execution of ad hoc Ansible commands in an execution environment&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To make playbook development easier, a Visual Studio Code extension is &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.ansible"&gt;available for download&lt;/a&gt; (Figure 2). As you would expect, this extension does syntax highlighting and real-time code validation as you type. Autocompletion is built in, and the extension has ansible-lint integrated as well.&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/vx.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/vx.png?itok=g8IHqw-M" width="645" height="298" alt="The Visual Studio Marketplace offers a VS Code extension for Ansible." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 2: The Visual Studio Marketplace offers a VS Code extension for Ansible. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 2: The Visual Studio Marketplace offers a Visual Studio Code extension for Ansible.&lt;/figcaption&gt; &lt;/figure&gt; &lt;h2&gt;Enhancements to network automation&lt;/h2&gt; &lt;p&gt;Ansible Automation Platform 2.2 brings better performance and resilience to your automation tasks. &lt;a href="https://www.libssh.org"&gt;libssh,&lt;/a&gt; which uses the pylibSSH library, is now used by default for SSH connections.&lt;/p&gt; &lt;p&gt;This new release also uses direct execution by default to improve performance. This means that commands are carried out by the Ansible control node instead of being packaged and executed by the shell.&lt;/p&gt; &lt;p&gt;New resource modules have been released, including &lt;code&gt;snmp_server&lt;/code&gt; and &lt;code&gt;hostname&lt;/code&gt; modules for supported network operating systems: Arista, Cisco, Juniper, and VyOS.&lt;/p&gt; &lt;h2&gt;Streamlined integration with Red Hat Insights&lt;/h2&gt; &lt;p&gt;Ansible Automation Platform 2.2 includes a simpler, more intuitive way to connect your automation data with Red Hat Insights. The insights-client package is responsible for ensuring that connected data for your Ansible Automation Platform infrastructure has also been added to the bundled installer on the Red Hat Customer Portal.&lt;/p&gt; &lt;p&gt;Once you are connected with Red Hat Insights, you can get actionable metrics and dashboards to help identify, troubleshoot, and resolve operational, business, and security issues across your entire ecosystem.&lt;/p&gt; &lt;p&gt;You also gain full visibility into the performance and return on investment (ROI) of your efforts, helping you make more informed decisions to optimize and expand your automation.&lt;/p&gt; &lt;h2&gt;Evolving support in Red Hat Enterprise Linux&lt;/h2&gt; &lt;p&gt;Red Hat Enterprise Linux is keeping up with Ansible Automation Platform in a number of ways:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Ansible Automation Platform 2.2 components are now available in the Red Hat Customer Portal as RPM packages, in both versions 8 and 9 of Red Hat Enterprise Linux.&lt;/li&gt; &lt;li&gt;Ansible Automation Platform 2.2 brings support for version 13 of the PostgreSQL database, which is in Red Hat Enterprise Linux 9. PostgreSQL 13 can be used by multiple Ansible Automation Platform components for improved compatibility and performance.&lt;/li&gt; &lt;li&gt;Ansible Automation Platform 2.2 includes an updated certified Red Hat Enterprise Linux System Roles Collection to automate Red Hat Enterprise Linux 9 instances.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;An eye toward the future…&lt;/h2&gt; &lt;p&gt;The following two features have been introduced in Ansible Automation Platform 2.2 as technology previews. These features provide early access to upcoming product innovations.&lt;/p&gt; &lt;h3&gt;Chain-of-custody tracking via digitally-signed components&lt;/h3&gt; &lt;p&gt;Digital signing of content is an important security feature that allows you to assure that the chain of custody for your assets stays within trusted providers.&lt;/p&gt; &lt;p&gt;Red Hat is also announcing Red Hat Ansible Certified Content: Digitally-signed content from Red Hat and partners to provide end-to-end security from download to deployment.&lt;/p&gt; &lt;p&gt;You can also sign your own content when publishing it to your private automation hub.&lt;/p&gt; &lt;h3&gt;Automation services catalog as a self-hosted, on-premises offering&lt;/h3&gt; &lt;p&gt;The automation services catalog is now a self-hosted, on-premises (private) offering. This gives automation creators and business users self-service access across physical, virtual, cloud, container, and edge environments.&lt;/p&gt; &lt;p&gt;This new iteration of the automation services catalog helps organizations extend the value of their automation to the business user by presenting access to Ansible Automation Platform in a catalog-style format.&lt;/p&gt; &lt;p&gt;With multilevel approval and role-based access control (RBAC), administrators can deploy projects more quickly, with the governance they need to meet compliance and procurement requirements.&lt;/p&gt; &lt;h2&gt;Make the move to 2.2&lt;/h2&gt; &lt;p&gt;You can download the new version of Ansible Automation Platform from &lt;a href="https://developers.redhat.com/products/ansible/download"&gt;our Ansible website&lt;/a&gt;. Try out the newest version and automate everything you do.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/05/26/whats-new-ansible-automation-platform-22" title="What’s new in Ansible Automation Platform 2.2"&gt;What’s new in Ansible Automation Platform 2.2&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Don Schenck</dc:creator><dc:date>2022-05-26T15:30:00Z</dc:date></entry><entry><title>Filter unwanted notifications in Cryostat 2.1</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/05/26/filter-unwanted-notifications-cryostat-21" /><author><name>Andrew Azores</name></author><id>16954849-a569-4372-b383-dda3dcee0daa</id><updated>2022-05-26T07:00:00Z</updated><published>2022-05-26T07:00:00Z</published><summary type="html">&lt;p&gt;&lt;a href="https://cryostat.io"&gt;Cryostat&lt;/a&gt; has always issued notifications when monitoring &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java&lt;/a&gt; applications with &lt;a href="https://docs.oracle.com/javacomponents/jmc-5-4/jfr-runtime-guide/about.htm#JFRUH170"&gt;Java Flight Recorder&lt;/a&gt; (JFK). Version 2.1 of Cryostat has a new implementation and interface for notifications that increases the amount of information offered, enhances the user's control over what is displayed, and improves Cryostat performance.&lt;/p&gt; &lt;h2&gt;Cryostat interface&lt;/h2&gt; &lt;p&gt;Thanks to a new WebSocket interface, Cryostat issues notifications for events that were not reported before. Thus, by default, many more notifications are reported to the user. For instance, the new &lt;a href="https://developers.redhat.com/articles/2022/05/11/how-build-automated-jfr-rules-cryostat-21s-new-ui"&gt;automated rules&lt;/a&gt; feature adds rules to lots of instances at once and emits notifications when each rule is created or deleted, as well as when a rule starts a recording, copies a recording to archive, or prunes an old recording from the archive. The volume of notifications could become especially daunting, as Figure 1 illustrates.&lt;/p&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/image1_5.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/image1_5.png?itok=0-zCTz84" width="666" height="1014" alt="Cryostat can deliver an enormous number of notifications." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 1: Cryostat can deliver an enormous number of notifications. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;p&gt;To deal with this problem, Cryostat 2.1 gives users the ability to enable and disable the notifications they receive through a new Settings page (Figure 2). The user can select notifications by category or, with a single click, enable or disable all notifications.&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/image2_0.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/image2_0.png?itok=t4XT14Q8" width="1440" height="594" alt="The Settings view in Cryostat 2.1 includes a Notifications widget with toggles for each notification category." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 2: The Settings view in Cryostat 2.1 includes a Notifications widget with toggles for each notification category. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;For example, to disable all notifications that might be emitted by the background activities of the automated rules, toggle off the following categories:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Recording Created&lt;/strong&gt; (emitted when an automated rule creates a new recording on a target)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Recording Saved&lt;/strong&gt; (emitted when an automated rule copies an active recording to the archives)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Archived Recording Deleted&lt;/strong&gt; (emitted when an automated rule trims old copies from the archives)&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Implementation and performance&lt;/h2&gt; &lt;p&gt;Cryostat uses a WebSocket connection between the Cryostat backend and the web client running in your browser to display notifications when various actions or state changes occur. In Cryostat 2.1, a WebSocket notification is emitted for all conceptual actions and state changes that can occur, whereas previous versions of Cryostat did not include notifications for some types of action or state change. Formatting is also more consistent now, with a detailed title and description for each notification type.&lt;/p&gt; &lt;p&gt;When a notification category is disabled, the messages are still sent over the WebSocket connection, but the toast notification in the web client simply isn't displayed. The user's chosen settings are entirely on the web client side and are persisted in the browser's local storage. The web client still receives and holds the notification information in memory. Therefore, if you re-enable a notification category, any previously emitted notifications in that category will still be available for you to read. This way, Cryostat avoids cluttering the user interface with notifications while still preserving a log of actions and state changes for inspection if needed.&lt;/p&gt; &lt;p class="Indent1"&gt;&lt;strong&gt;Note&lt;/strong&gt;: The notification categories do not distinguish between actions performed by an automated rule and those performed by an interactive user by another client via API requests. If you disable these notifications, they will be disabled for all cases, not only when an automated rule performs them.&lt;/p&gt; &lt;p&gt;Web client performance has also been improved by using notifications to update the state of resources such as active recordings, archived recordings, and templates. For example, when an active recording is deleted, the web client now uses the corresponding notification from the backend to update the active recordings list by deleting the recording in question. Other state updates work in a similar manner. Previously, this workflow would have required sending an HTTP GET request to the backend to get the entire, updated list of active recordings and using this list to fully replace the outdated list displayed to the user. Now the web client simply updates a single deleted recording entry.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Cryostat's notification process is much better structured and richer in version 2.1. It requires a bit more preparation in your browser to get the notifications you want and exclude the many others you might find distracting. But consistency and performance improvements create a better user interface.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/05/26/filter-unwanted-notifications-cryostat-21" title="Filter unwanted notifications in Cryostat 2.1"&gt;Filter unwanted notifications in Cryostat 2.1&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Andrew Azores</dc:creator><dc:date>2022-05-26T07:00:00Z</dc:date></entry><entry><title type="html">Upgrade Drools version</title><link rel="alternate" href="https://blog.kie.org/2022/05/upgrade-drools-version.html" /><author><name>Toshiya Kobayashi</name></author><id>https://blog.kie.org/2022/05/upgrade-drools-version.html</id><updated>2022-05-26T00:00:00Z</updated><content type="html">We sometimes see questions regarding Drools version upgrade. Most of those questions are about how to change the old API usage in Drools 5 or 6. In this article, I’m going to guide how to change your code to work with the latest Drools version (7.70.0.Final as of now). API If you are using old style APIs, it would be like this. Drools 5 Drools 6 Since Drools 6, we have introduced new KIE APIs. So the old APIs are considered as internal APIs that are not recommended to use in user applications. In Drools 7, technically, we can write in a similar style. However, I write this example not to recommend you write in this style. Just to show a kind of bridge between old APIs and new KIE APIs. In all the above examples, you build a package and give the package to a kbase. In the new KIE APIs, the procedure is encapsulated in KieContainer. Please have a look at the new KIE APIs style. "Basic DRL" "Kjar and Runner" "Programmatically create a Kjar" For details, please refer to the blog post. &gt; If you have all rules in classpath (e.g. inside an application), "Basic DRL" would be the easiest example. If you had rules in serialized PKGs, you would choose "Kjar and Runner" approach. If you want to programmatically manage resource files, "Programmatically create a Kjar" would fit. Some configuration classes might be moved to different packages or even removed. If you have any doubt, feel free to ask in community channels ( , , ). RULES DRL and XLS spreadsheets are basically backward compatible. So you can use rule assets in Drools 7. But there is one caveat, "Property reactivity". Property reactivity was introduced since Drools 5.4 but it was not enabled by default. However, it’s enabled by default since Drools 7. It means you may see that rules react differently when you upgrade the version. In that case, try to disable the feature and check if the different behaviour was caused by property reactivity. If that is the case, you have 2 options. A. Keep property reactivity disabled B. Enable property reactivity and review your rules to meet property reactivity behaviour Property reactivity a powerful feature which allows you to write rules naturally and also provide good performance. Please refer to this section for details. CONCLUSION Upgrading versions is a key maintenance action of open source software use. Please don’t hesitate! The post appeared first on .</content><dc:creator>Toshiya Kobayashi</dc:creator></entry><entry><title>Eat up fewer resources in Cryostat 2.1 with sidecar reports</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/05/25/eat-fewer-resources-cryostat-21-sidecar-reports" /><author><name>Hareet Dhillon</name></author><id>cc5fce0c-3643-49d1-bd26-b35b0b1e3bd5</id><updated>2022-05-25T07:00:00Z</updated><published>2022-05-25T07:00:00Z</published><summary type="html">&lt;p&gt;&lt;a href="https://cryostat.io"&gt;Cryostat&lt;/a&gt; is a tool for managing &lt;a href="https://docs.oracle.com/javacomponents/jmc-5-4/jfr-runtime-guide/about.htm#JFRUH170"&gt;JDK Flight Recorder&lt;/a&gt; data on &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt;. Version 2.1 of Cryostat introduces the option of using a &lt;a href="https://github.com/cryostatio/cryostat-reports"&gt;sidecar reports container&lt;/a&gt; to generate automated analysis reports for JDK flight recordings. &lt;a href="https://developers.redhat.com/blog/2021/01/25/introduction-to-containerjfr-jdk-flight-recorder-for-containers"&gt;Previously&lt;/a&gt;, the main Cryostat container handled the report generation. Report generation is a resource-intensive operation, and as a result, users may find themselves overprovisioning the Cryostat container to meet peak resource demands. Those resources may in turn end up unused if you're not generating reports.&lt;/p&gt; &lt;p&gt;With this new option to delegate report generation to a sidecar &lt;a href="https://developers.redhat.com/topics/containers"&gt;container&lt;/a&gt;, users will find it easier to provision resources more efficiently. When report generation is not a concern, the main Cryostat container, including its web server and various lightweight operations over HTTP and JMX, has only a small resource footprint. Based on their report generation workflow, users can provision resources to the sidecar reports container accordingly and spin up any number of replicas of that container.&lt;/p&gt; &lt;p&gt;This article explores the process of setting up sidecar report container replicas for automated analysis report generation using Cryostat on &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Prerequisites for using a sidecar container&lt;/h2&gt; &lt;p&gt;To get started, use a running OpenShift or &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; cluster with the Cryostat Operator &lt;a href="https://cryostat.io/get-started/#installing-cryostat-operator"&gt;installed&lt;/a&gt;. If you don’t already have access to an OpenShift or Kubernetes cluster, try &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift Local&lt;/a&gt;. This article utilizes the OpenShift UI to interact with the Cryostat Operator.&lt;/p&gt; &lt;p&gt;Then, deploy a containerized Java application with Java Management Extensions (JMX) enabled and exposed running in the same namespace as the Cryostat Operator. To learn more about how to fulfill this requirement by creating a sample &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt; application, refer to the Red Hat Developer article &lt;a href="https://developers.redhat.com/articles/2021/10/26/configuring-java-applications-use-cryostat#"&gt;Configuring Java applications to use Cryostat&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Create the Cryostat resource with the sidecar reports container enabled&lt;/h2&gt; &lt;p&gt;Once the Cryostat Operator is installed, setting up the sidecar reports container is a straightforward process. Navigate to the Cryostat Operator under the &lt;strong&gt;Installed Operators&lt;/strong&gt; tab on the OpenShift web console, then create an instance of the Cryostat resource (see Figure 1).&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%201.jpg" width="1922" height="936" alt="The Cryostat Operator page under Installed Operators on the Openshift web console, with Create instance highlighted." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 1: Select Create instance to create the Cryostat resource.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;This will direct you to the &lt;strong&gt;Create Cryostat&lt;/strong&gt; page, which provides various configuration options as shown in Figure 2.&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%202_0.png" width="1920" height="938" alt="The Cryostat resource creation page titled Create Cryostat with various configuration options." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 2: The configuration options for the Cryostat resource.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Scroll down to select &lt;strong&gt;Report Options&lt;/strong&gt; followed by &lt;strong&gt;Resources&lt;/strong&gt; (see Figure 3).&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%203.png" width="1921" height="938" alt="The report generation configuration options for the Cryostat resource. Users can configure any number of replicas of the sidecar container, with resource limits and requests options for CPU cores, memory and storage. There's also an option to set the sub process maximum heap size for reports generated using the Cryostat instance itself instead of the sidecar container." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 3: Select your report generation configuration options.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Next, select the number of replicas of the reports sidecar container to deploy and configure the &lt;a href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.5/html/developer_guide/dev-guide-compute-resources"&gt;Limits and Requests&lt;/a&gt; resources for each replica. The default number of replicas is 0, meaning the main Cryostat container handles the report generation through a sub-process. The default maximum heap size of this sub-process is 200MiB, but the user can adjust the maximum limit as needed. The &lt;strong&gt;Sub Process Max Heap Size&lt;/strong&gt; field will be ignored if you request at least one reports sidecar container replica.&lt;/p&gt; &lt;p&gt;For this example, you should create the Cryostat instance using the report options configuration shown in Figure 4.&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%204.png" width="1921" height="939" alt="A reports configuration with the number of Replicas set to 1, Limits set to 500m CPU cores, 5G of memory and 20G of storage, and Requests set to 250m CPU cores, 2G of memory and 10G of storage." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 4: Configure the Replicas, Limits, and Requests fields as shown here, then scroll down and select Create.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;To generate the automated analysis report, navigate to the Cryostat web client. From the Cryostat Operator page under &lt;strong&gt;Installed Operators&lt;/strong&gt;, select the &lt;strong&gt;Cryostat&lt;/strong&gt; tab and then select the &lt;strong&gt;cryostat-sample&lt;/strong&gt; resource. On the resulting page, you can find the URL for the web client (Figure 5).&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/cryostat-application-url.jpg" width="1600" height="781" alt="Installed Operators -&gt; Cryostat Operator -&gt; Cryostat -&gt; cryostat-sample -&gt; Application URL highlighted." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 5: Follow the Application URL to access the Cryostat web client.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;A prompt will request your cluster credentials to authenticate with the web client. After logging in, select a target application (whether it’s of your own making or the sample Quarkus application we linked to above) and navigate to the &lt;strong&gt;Recordings&lt;/strong&gt; tab (Figure 6). Create a fixed duration custom flight recording. Once it is finished, request an automated analysis report of the recording. For a more detailed walk-through of these steps, refer to the &lt;a href="https://cryostat.io/guides/"&gt;Guides on using Cryostat&lt;/a&gt;.&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%206.png" width="1920" height="938" alt="The Recordings view for the sample Quarkus application in the Cryostat web client, after a recording has been stopped and its automated analysis report generated." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 6: Requesting the automated analysis report will trigger the report generation in the sidecar container.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;To double-check that the sidecar report container handled the report generation, go back to the OpenShift console and navigate to &lt;strong&gt;Pods&lt;/strong&gt; under the &lt;strong&gt;Workloads&lt;/strong&gt; tab. This is where you can find the pod containing the sidecar report container (see Figure 7).&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%207.jpg" width="1920" height="929" alt="OpenShift console -&gt; Workloads -&gt; Pods -&gt; cryostat-sample-reports-{RANDOM_STRING} highlighted, where RANDOM_STRING is a randomly generated alphanumeric string that is appended to the cryostat-sample-reports Pod name." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 7: Select the cryostat-sample-reports pod. Your pod name will also be appended with a randomly generated alphanumeric string.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Next, go to the &lt;strong&gt;Logs&lt;/strong&gt; tab, shown in Figure 8, and pause the log stream. Then scroll through the repeated HTTP GET /health requests to locate the log messages confirming that the sidecar reports container received and fulfilled an HTTP request from the main Cryostat container.&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-embedded"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;div class="field__item"&gt; &lt;img src="https://developers.redhat.com/sites/default/files/Image%208.jpg" width="1920" height="939" alt="The sidecar report container logs showing the report generation HTTP request from the main Cryostat container." loading="lazy" typeof="Image" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 8: The sidecar report container receives and responds to a request from the main Cryostat container for the generated report.&lt;/figcaption&gt; &lt;/figure&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Using a sidecar report container for automated analysis report generation allows users to efficiently provision resources for Cryostat. For more information about Cryostat, visit &lt;a href="https://cryostat.io/get-started/"&gt;cryostat.io&lt;/a&gt;. For questions, comments, and feedback, feel free to connect with us on &lt;a href="https://github.com/cryostatio"&gt;GitHub&lt;/a&gt; or join our &lt;a href="https://groups.google.com/g/cryostat-development"&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Find more Cryostat tutorials on Red Hat Developer:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2021/01/25/introduction-to-containerjfr-jdk-flight-recorder-for-containers"&gt;Introduction to Cryostat: JDK Flight Recorder for containers&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/articles/2022/05/11/how-build-automated-jfr-rules-cryostat-21s-new-ui"&gt;How to build automated JFR rules with Cryostat 2.1's new UI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/articles/2021/10/26/configuring-java-applications-use-cryostat"&gt;Tutorial: Configuring Java applications to use Cryostat&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/05/25/eat-fewer-resources-cryostat-21-sidecar-reports" title="Eat up fewer resources in Cryostat 2.1 with sidecar reports"&gt;Eat up fewer resources in Cryostat 2.1 with sidecar reports&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Hareet Dhillon</dc:creator><dc:date>2022-05-25T07:00:00Z</dc:date></entry><entry><title>Quarkus 2.9.2.Final released - Maintenance release</title><link rel="alternate" href="&#xA;                https://quarkus.io/blog/quarkus-2-9-2-final-released/&#xA;            " /><author><name>Guillaume Smet (https://twitter.com/gsmet_)</name></author><id>https://quarkus.io/blog/quarkus-2-9-2-final-released/</id><updated>2022-05-25T00:00:00Z</updated><published>2022-05-25T00:00:00Z</published><summary type="html">Today, we released Quarkus 2.9.2.Final, our second maintenance release for 2.9. It comes with a bunch of fixes and documentation improvements. It is a safe upgrade for anyone already using 2.9 and is highly recommended. If you are not using 2.9 already, please refer to the 2.9 migration guide. Full...</summary><dc:creator>Guillaume Smet (https://twitter.com/gsmet_)</dc:creator><dc:date>2022-05-25T00:00:00Z</dc:date></entry><entry><title type="html">Byteman 4.0.19 has been released</title><link rel="alternate" href="http://bytemanblog.blogspot.com/2022/05/byteman-4019-has-been-released.html" /><author><name>Andrew Dinn</name></author><id>http://bytemanblog.blogspot.com/2022/05/byteman-4019-has-been-released.html</id><updated>2022-05-24T12:26:00Z</updated><content type="html">  Byteman 4.0.19 is now available from the and from the . It is the latest update release for use on all JDK9+ runtimes up to and including JDK19.   Byteman 4.0.19 is a maintenance release which enables Byteman to be used with JDK19 releases. It also contains two small performance and documentation enhancements. More details are provided in the and the latest Byteman Programmers Guide.</content><dc:creator>Andrew Dinn</dc:creator></entry><entry><title>Create AWS resources with Kubernetes and Operators</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/05/24/create-aws-resources-kubernetes-and-operators" /><author><name>August Simonelli</name></author><id>84712ec4-b124-4b9b-b487-0980fff2511d</id><updated>2022-05-24T07:00:00Z</updated><published>2022-05-24T07:00:00Z</published><summary type="html">&lt;p&gt;This is the second and final article in a series about simplifying management of services offered for &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; by Amazon Web Services (AWS). The first article, &lt;a href="https://developers.redhat.com/articles/2022/05/16/how-use-operators-aws-controllers-kubernetes"&gt;How to use Operators with AWS Controllers for Kubernetes&lt;/a&gt;, introduced &lt;a href="https://gallery.ecr.aws/aws-controllers-k8s"&gt;Amazon's AWS Controllers for Kubernetes&lt;/a&gt; (ACK) and the related &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/operator/"&gt;Operators&lt;/a&gt; in Red Hat's &lt;a href="https://operatorhub.io"&gt;OperatorHub&lt;/a&gt;. This article gets services up and running. We install Operators for EC2 and S3 into a &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt; cluster, then create a bucket in S3 to show how to do AWS work with the Operators.&lt;/p&gt; &lt;p&gt;The ideas behind these articles, and a demo showing their steps, appear in my video &lt;a href="https://www.youtube.com/watch?v=MEKTnbeXv2Y"&gt;Using AWS Controllers for Kubernetes (ACK) with Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;How to get Operators to use AWS Controllers for Kubernetes&lt;/h2&gt; &lt;p&gt;In the first article in this series, you set up your AWS environment and fulfilled basic Kubernetes requirements; please go through the steps in that article before attempting the examples in this one. After your setup is complete, you're ready to install ACK service controllers from OperatorHub. You could potentially achieve this with a graphical user interface, a command-line interface (CLI), or an API; this article will use the GUI to best illustrate the process.&lt;/p&gt; &lt;p&gt;The magic here is in the simplicity of OperatorHub. Log in to your OpenShift UI. Under the Administrator view, go to the OperatorHub (select &lt;strong&gt;Operators→OperatorHub&lt;/strong&gt;). Type &lt;code&gt;AWS&lt;/code&gt; into the &lt;strong&gt;Filter by keyword …&lt;/strong&gt; search box to turn up available Operators (Figure 1).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/AWS-OperatorHubView.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/AWS-OperatorHubView.png?itok=mYpOyRky" width="1440" height="810" alt="A search for "AWS" turns up a lot of Operators in OperatorHub." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 1: A search for "AWS" turns up a lot of Operators in OperatorHub. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;The page shows all the ACK Operators available to you. A "Community" label appears on each tile. That's because the AWS Controller Operators are &lt;em&gt;Community Operators&lt;/em&gt; that have not been vetted or verified by Red Hat; Red Hat provides no support for them. Community Operators should be used with caution because their stability is unknown. You'll be reminded of this risk when you install each Operator.&lt;/p&gt; &lt;h2&gt;Install an Operator&lt;/h2&gt; &lt;p&gt;In the first article of this series, you attached policies to two AWS services: S3 and EC2. Now you'll install the respective Operators for each service. The Operators won't work yet because you have not applied the policies to them. This section provides an example for EC2, but other Operators follow the same process.&lt;/p&gt; &lt;p&gt;To start, click the tile for the EC2 Operator (Figure 2).&lt;/p&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/AWS-EC2-tile_0.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/AWS-EC2-tile_0.png?itok=qY5nwdtq" width="283" height="289" alt="OperatorHub tile for AWS Controllers for Kubernetes — Amazon EC2." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 2: OperatorHub contains a tile for AWS Controllers for Kubernetes — Amazon EC2. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;p&gt;Acknowledge that you viewed the Community operator message (Figure 3).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/AWs-CommunityOps.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/AWs-CommunityOps.png?itok=UDrbI7vD" width="606" height="341" alt="Clicking on the Amazon EC2 Operator displays a warning message. Click Continue." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 3: Clicking on the Amazon EC2 Operator displays a warning message. Click Continue. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Review the details of the Operator and choose &lt;strong&gt;Install&lt;/strong&gt; (Figure 4). We are accepting all the defaults offered.&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/AWS-ec2-operator_0.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/AWS-ec2-operator_0.png?itok=L4EDRNpN" width="899" height="836" alt="You can choose a Basic Install and click the Install button." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 4: You can choose a Basic Install and click the Install button. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;You can now review each Operator's details and see the APIs it provides. EC2 provides APIs for many familiar EC2 constructs. Notice that the preferred namespace is the one you created in the first part of this series. Leave all the defaults and choose &lt;strong&gt;Install&lt;/strong&gt; (Figure 5).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/AWS-ec2-operator-2.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/AWS-ec2-operator-2.png?itok=ZvAe9RRs" width="1440" height="983" alt="All the defaults are acceptable on the Install Operator screen." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 5: All the defaults are acceptable on the Install Operator screen. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;An installation progress dialog should appear (Figure 6).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-ec2-3.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-ec2-3.png?itok=Mncy71xB" width="629" height="281" alt="A screen is displayed during the time it takes to install the Operator." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 6: A screen is displayed during the time it takes to install the Operator. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;You can then inspect the Operator to see more information about it by clicking &lt;strong&gt;View Operator&lt;/strong&gt; (Figure 7).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-ec2-4.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-ec2-4.png?itok=UmWvybk3" width="615" height="240" alt="Successful installation leads to a screen with a View Operator button." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 7: Successful installation leads to a screen with a View Operator button. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;In short, the controller for EC2 allows you to do a lot of things with EC2 inside Kubernetes. You can create Elastic IP addresses, subnets, a VPC, and a lot more. And since there are many different ACKs to choose from, the controllers cover a lot of the AWS ecosystem. Feel free to click around on the Operator to see the features it provides (Figure 8).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-ec2-5.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-ec2-5.png?itok=eodaOO0s" width="1065" height="991" alt="The Provided APIs screen shows several services." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 8: The Provided APIs screen shows several services. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;h2&gt;Where do Operators fit into the AWS architecture?&lt;/h2&gt; &lt;p&gt;To make full use of these controllers and Operators, you should understand the basics of the architecture they work within.&lt;/p&gt; &lt;p&gt;ACK sits between Kubernetes and AWS, translating Kubernetes code into AWS API requests (Figure 9). The ACK controller monitors its resource and ensures that it remains managed and in sync. Developers can create custom resources (CRs) to utilize the installed custom resource definitions (CRDs) that the controller installs and maintains.&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/ACK%20and%20OLM%20%281%29.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/ACK%20and%20OLM%20%281%29.png?itok=AkSjN-ht" width="960" height="540" alt="The OpenShift Operator communicates through the Kubernetes API with resources on AWS." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 9: The OpenShift Operator communicates through the Kubernetes API with resources on AWS. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 9: An overview of ACK, OLM, and Kubernetes&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Let's quickly take a look at what's happening around the cluster now that you've installed the Operator. By checking the pods running in the &lt;code&gt;ack-system&lt;/code&gt; namespace, you can view the components of the controller:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;$ oc -n ack-system get all NAME READY STATUS RESTARTS AGE pod/ack-ec2-controller-69ff7f65c7-hcvvg 1/1 Running 0 5m12s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/ack-ec2-metrics-service NodePort 172.30.85.132 &lt;none&gt; 8080:30416/TCP 5m13s NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/ack-ec2-controller 1/1 1 1 5m13s NAME DESIRED CURRENT READY AGE replicaset.apps/ack-ec2-controller-69ff7f65c7 1 1 1 5m13s&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The Operator has installed the pods, services, deployment, and replica sets needed to get things running. You have access to the EC2 API through the controller using a bunch of installed CRDs:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;$ oc get crd | grep aws dhcpoptions.ec2.services.k8s.aws 2022-04-08T02:28:07Z elasticipaddresses.ec2.services.k8s.aws 2022-04-08T02:28:08Z internetgateways.ec2.services.k8s.aws 2022-04-08T02:28:08Z natgateways.ec2.services.k8s.aws 2022-04-08T02:28:08Z routetables.ec2.services.k8s.aws 2022-04-08T02:28:07Z securitygroups.ec2.services.k8s.aws 2022-04-08T02:28:08Z subnets.ec2.services.k8s.aws 2022-04-08T02:28:08Z transitgateways.ec2.services.k8s.aws 2022-04-08T02:28:08Z vpcendpoints.ec2.services.k8s.aws 2022-04-08T02:28:08Z vpcs.ec2.services.k8s.aws 2022-04-08T02:28:08Z&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can see all the services visible in the UI on the Operator's information page. Try inspecting one of these CRDs for all the details about how to create EC2 services directly:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;$ oc get crd subnets.ec2.services.k8s.aws -o yaml apiVersion: apiextensions.k8s.io/v1 kind: CustomResourceDefinition metadata: annotations: controller-gen.kubebuilder.io/version: v0.7.0 operatorframework.io/installed-alongside-a1a9465d95d1001c: ack-system/ack-ec2-controller.v0.0.13 creationTimestamp: "2022-04-08T02:28:08Z" generation: 1 labels: operators.coreos.com/ack-ec2-controller.ack-system: "" name: subnets.ec2.services.k8s.aws resourceVersion: "65583" uid: 8f2a7ee5-336a-41a8-82c7-a508248f00d9 spec: conversion: strategy: None &lt;output cut&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also ask the Kubernetes &lt;code&gt;kubectl&lt;/code&gt; command or the OpenShift &lt;code&gt;oc&lt;/code&gt; command to &lt;code&gt;explain&lt;/code&gt; aspects of the CRD for further information:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;$ oc explain subnets KIND: Subnet VERSION: ec2.services.k8s.aws/v1alpha1 DESCRIPTION: Subnet is the Schema for the Subnets API FIELDS: apiVersion &lt;string&gt; APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources kind &lt;string&gt; Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds metadata &lt;Object&gt; Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata spec &lt;Object&gt; SubnetSpec defines the desired state of Subnet. Describes a subnet. status &lt;Object&gt; SubnetStatus defines the observed state of Subnet&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Example: Create an S3 Bucket from OpenShift&lt;/h2&gt; &lt;p&gt;Now that you know a little more about ACK controllers, let's try a very simple example and create an S3 bucket with a Kubernetes configuration.&lt;/p&gt; &lt;p&gt;First, go to OperatorHub and find and install the S3 controller. Review the earlier EC2 example if you need a reminder about the steps.&lt;/p&gt; &lt;p&gt;Once it's installed, you can view it on the cluster and see it running like this:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;$ oc get crd | grep aws | grep s3 buckets.s3.services.k8s.aws 2022-04-08T02:46:27Z&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Try &lt;code&gt;oc explain&lt;/code&gt; and &lt;code&gt;oc describe&lt;/code&gt; to learn more about the CRD installed. S3 is a very simple example with only one CRD, so it's a great place to start.&lt;/p&gt; &lt;p&gt;Open the AWS S3 console and review the current state of S3 in your account (Figure 10). You can also use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/"&gt;AWS S3 CLI&lt;/a&gt; for this task, but I find the UI easier when starting out.&lt;/p&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-s3-1_0.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/aws-s3-1_0.png?itok=k3SlCbaZ" width="600" height="159" alt="The Buckets screen of Amazon S3, showing available buckets." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 10: The Buckets screen of Amazon S3 shows available buckets. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;p&gt;In my environment, I see the S3 bucket that &lt;a href="https://aws.amazon.com/rosa/"&gt;Red Hat OpenShift Service on AWS&lt;/a&gt; set up for me to back my internal OpenShift registry.&lt;/p&gt; &lt;p&gt;Next, log in to the Developer view on OpenShift and search for &lt;code&gt;S3&lt;/code&gt; in the Developer Catalog (Figure 11). As with AWS, you can do all this via the CLI. But for clarity in this example, I've chosen to use the OpenShift console.&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-s3-2.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-s3-2.png?itok=irVtT_Iz" width="1440" height="795" alt="A search for "S3" in the OpenShift Developer Catalog turns up Operator Bucket." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 11: A search for "S3" in the OpenShift Developer Catalog turns up Operator Bucket. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Choosing S3 leads to a &lt;strong&gt;Create Bucket&lt;/strong&gt; dialog providing a lot of options that reflect what can be done in AWS (Figure 12).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-s3-3.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-s3-3.png?itok=clCi9YKY" width="1413" height="1000" alt="The Create Bucket dialog allows you to assign labels and other parameters." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 12: The Create Bucket dialog allows you to assign labels and other parameters. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;The controller will manage the resource for you, so go ahead and fill out whatever you need. The first &lt;strong&gt;Name&lt;/strong&gt; field is the name represented in the object's metadata. Remember, S3 buckets must be unique in AWS, so pick something more representative of your project than the "example" string shown in Figure 12. For instance, I entered:&lt;/p&gt; &lt;pre&gt; &lt;code&gt;example-bucket-for-ackcontroller-demo-12345678 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The second &lt;strong&gt;Name&lt;/strong&gt; field is the actual name of the bucket, which must also be unique within S3.&lt;/p&gt; &lt;p&gt;Review the rest of the fields and fill them out as required. There are a lot of options, just like when you create a bucket directly in AWS.&lt;/p&gt; &lt;p&gt;Before you create the bucket, be sure to expose the YAML view and save the details so you can easily create buckets outside the UI. With all the options available in the ACK controllers, I find using the YAML view one of the easiest ways to quickly learn how to create CRs. For instance, this is the bucket that the controller created for me, based on my entries on the form:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;apiVersion: s3.services.k8s.aws/v1alpha1 kind: Bucket metadata: name: example-bucket-for-ackcontroller-demo-123456789 labels: Environment: Dev namespace: default spec: encryption: rules: - bucketKeyEnabled: true tagging: tagSet: - key: MyTagKey value: Tagged name: example-bucket-for-ackcontroller-demo-123456789&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Having filled out your form, click &lt;strong&gt;Create&lt;/strong&gt; and the bucket will be created in AWS. Going back to the S3 UI, you should see the bucket (Figure 13).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-s3-4.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-s3-4.png?itok=cOoZ-aor" width="1440" height="389" alt="Now the Buckets screen of Amazon S3 shows another bucket." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 13: Now the Buckets screen of Amazon S3 shows another bucket. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;And looking more deeply into it, you can see the settings from the dialog, such as the tag (Figure 14).&lt;/p&gt; &lt;figure role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/aws-s3-5.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/aws-s3-5.png?itok=GOzxeQfC" width="1440" height="792" alt="The screen for each bucket shows its parameters, including assigned tags." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 14: The screen for each bucket shows its parameters, including assigned tags. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Interacting with AWS services really is that easy. And of course, you're not required to use the UI. You can automate AWS service creation via code and the command line, using the ACK controllers.&lt;/p&gt; &lt;h2&gt;What's next?&lt;/h2&gt; &lt;p&gt;At the time of this writing, there are 15 AWS controllers available as Operators via OperatorHub, so there are a lot of resources you can create in AWS with ACK. For example, a combination of the EC2 and RDS operators allows you to create database instances directly from Kubernetes, including all the required EC2 components such as a VPC and subnets.&lt;/p&gt; &lt;p&gt;For more great ideas, there are a number of ACK tutorials on the &lt;a href="https://aws-controllers-k8s.github.io/community/docs/community/overview/"&gt;AWS ACK documentation pages&lt;/a&gt;, including the &lt;a href="https://aws-controllers-k8s.github.io/community/docs/tutorials/rds-example/"&gt;RDS example&lt;/a&gt; just mentioned.&lt;/p&gt; &lt;p&gt;Keep in mind that the Operators for these controllers are Community Operators and not supported by Red Hat. Because ACK is a rapidly evolving and very active project, you may find you run into problems with certain releases. But these controllers will only get better as more people use them. The project is fully open, cross-vendor, and strongly community driven.&lt;/p&gt; &lt;h2&gt;Share your experiences&lt;/h2&gt; &lt;p&gt;If you'd like to help, learn more, or just connect in general, head on over to the &lt;a href="http://kubernetes.slack.com"&gt;Kubernetes Slack channel&lt;/a&gt; and join us in #provider-aws to say hello to the AWS and Red Hat engineers creating the code, along with various ACK users and even the occasional blog posting author.&lt;/p&gt; &lt;p&gt;We're looking for more good examples of creating complex deployments in AWS via ACK. If you've got a deployment you think would be made easier with ACK, or one you've made better, let us know on the Slack channel or in the comments to this article. We might showcase your work in some upcoming postings and videos.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/05/24/create-aws-resources-kubernetes-and-operators" title="Create AWS resources with Kubernetes and Operators"&gt;Create AWS resources with Kubernetes and Operators&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>August Simonelli</dc:creator><dc:date>2022-05-24T07:00:00Z</dc:date></entry><entry><title>How to install command-line tools on a Mac</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/05/23/how-install-command-line-tools-mac" /><author><name>Varsha Sharma</name></author><id>1d7ef875-f47c-4d8d-8248-c893f14ee476</id><updated>2022-05-23T07:00:00Z</updated><published>2022-05-23T07:00:00Z</published><summary type="html">&lt;p&gt;macOS imposes strict limitations on the places from which you can download commands. Many of the Linux-related tools you want to use come from sites other than the App Store, so you have to change your preferences in macOS to use the commands. In this article, I show how to install a command that is not from the App Store, using the popular &lt;a href="https://helm.sh"&gt;Helm&lt;/a&gt; client as an example.&lt;/p&gt; &lt;h2&gt;Download a binary onto your Mac&lt;/h2&gt; &lt;p&gt;Download the binary for the client you need. For example, Helm offers a variety of binaries at its &lt;a href="https://github.com/helm/helm/releases"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Unpack the binary and add it to your &lt;code&gt;PATH&lt;/code&gt;. I prefer to add commands in the &lt;code&gt;/usr/local/bin&lt;/code&gt; directory. Here's how to install the current version of Helm:&lt;/p&gt; &lt;pre&gt; &lt;code&gt;$ tar xf helm-v3.9.0-rc.1-darwin-amd64.tar $ cd darwin-amd64/ $ sudo mv helm /usr/local/bin &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;At this point, the warning in Figure 1 appears if you try to execute the &lt;code&gt;helm&lt;/code&gt; command.&lt;/p&gt; &lt;pre&gt; &lt;code&gt;helm list&lt;/code&gt;&lt;/pre&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/fig1_6.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/fig1_6.png?itok=tgp-Gxd4" width="521" height="568" alt="macOS error: the computer refuses to open a tool downloaded from an unrecognized location." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 1: macOS displays an error and refuses to open a tool downloaded from an unrecognized location. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;p&gt;You get the same error if you try to open the application from the Finder. The problems arise because macOS keeps track of the sources for applications and is wary of applications that don't come from the App Store. You can expand the range of sources that your computer will accept, however.&lt;/p&gt; &lt;h2&gt;Changing preferences for downloads&lt;/h2&gt; &lt;p&gt;You can change your range of sources for applications in the System Preferences application, which is usually in your Dock on your desktop. The option you want is on the &lt;strong&gt;Security &amp; Privacy&lt;/strong&gt; pane, which by default allows downloads only from Apple's App Store. You have to click the lock icon at the bottom left of the page, enter your admin password, and then change the option to &lt;strong&gt;App Store and identified developers&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;If &lt;strong&gt;App Store and identified developers&lt;/strong&gt; is already checked but &lt;code&gt;helm&lt;/code&gt; did not run, select &lt;strong&gt;Allow anyway&lt;/strong&gt; (Figure 2).&lt;/p&gt; &lt;figure class="rhd-u-has-filter-caption" role="group"&gt; &lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content-full-width"&gt; &lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/Screenshot%202022-04-19%20at%202.15.58%20PM.png" data-featherlight="image"&gt;&lt;img src="https://developers.redhat.com/sites/default/files/styles/article_full_width_1440px_w/public/Screenshot%202022-04-19%20at%202.15.58%20PM.png?itok=HKpaIizz" width="1314" height="1156" alt="The Allow Anyway button allows you to enable an application blocked by Apple." loading="lazy" typeof="Image" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 2. The Allow Anyway button allows you to enable an application blocked by Apple. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt; &lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 2: The Allow Anyway button allows you to enable an application blocked by Apple.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;After you change the security setting, installation starts:&lt;/p&gt; &lt;pre&gt; &lt;code&gt;Helm stores cache, configuration, and data based on the following configuration order: - If a HELM_*_HOME environment variable is set, it will be used - Otherwise, on systems supporting the XDG base directory specification, the XDG variables will be used - When no other location is set a default location will be used based on the operating system By default, the default directories depend on the Operating System. The defaults are listed below: | Operating System | Cache Path | Configuration Path | Data Path | |------------------|---------------------------|--------------------------------|-------------------------| | Linux | $HOME/.cache/helm | $HOME/.config/helm | $HOME/.local/share/helm | | macOS | $HOME/Library/Caches/helm | $HOME/Library/Preferences/helm | $HOME/Library/helm | | Windows | %TEMP%\helm | %APPDATA%\helm | %APPDATA%\helm | Usage: helm [command] Available Commands: completion generate autocompletion scripts for the specified shell create create a new chart with the given name .... .... saving session....completed [Process completed]&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Once installation has completed, run the &lt;code&gt;helm&lt;/code&gt; command again:&lt;/p&gt; &lt;pre&gt; &lt;code&gt;$ helm version version.BuildInfo{Version:"v3.8.2", GitCommit:"6e3701edea09e5d55a8ca2aae03a68917630e91b", GitTreeState:"clean", GoVersion:"go1.17.5"}&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This output shows that Helm has been installed successfully. A similar process should allow you to install other command-line tools on macOS, such as the &lt;code&gt;oc&lt;/code&gt; client for &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;RedHat OpenShift&lt;/a&gt;.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/05/23/how-install-command-line-tools-mac" title="How to install command-line tools on a Mac"&gt;How to install command-line tools on a Mac&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Varsha Sharma</dc:creator><dc:date>2022-05-23T07:00:00Z</dc:date></entry><entry><title type="html">WildFly custom caches configuration for Stateful Beans</title><link rel="alternate" href="http://www.mastertheboss.com/jbossas/jboss-cluster/jboss-as-7-custom-caches-configuration/" /><author><name>F.Marchioni</name></author><id>http://www.mastertheboss.com/jbossas/jboss-cluster/jboss-as-7-custom-caches-configuration/</id><updated>2022-05-23T02:46:00Z</updated><content type="html">This article has been updated to let you how to configure Stateful EJB Caches for your applications running on the latest version of WildFly application server. What is a Stateful cache Stateful session beans are conversational components that preserve their state contained in instance variables. Each stateful bean that is instantiated is stored in a ... The post appeared first on .</content><dc:creator>F.Marchioni</dc:creator></entry><entry><title>Quarkus Tools for IntelliJ 1.11.0 released!</title><link rel="alternate" href="&#xA;                https://quarkus.io/blog/intellij-quarkus-tools-1.11.0/&#xA;            " /><author><name>Jeff Maury (https://twitter.com/jeffmaury)</name></author><id>https://quarkus.io/blog/intellij-quarkus-tools-1.11.0/</id><updated>2022-05-23T00:00:00Z</updated><published>2022-05-23T00:00:00Z</published><summary type="html">We are very pleased to announce the 1.11.0 release of Quarkus Tools for IntelliJ. This release adds support for Qute templates but also align with LSP4MP 0.4.0 and quarkus-ls 0.11.1. Qute templates When a Quarkus project has Qute in the classpath, editing a Qute template (HTML / JSON / YAML...</summary><dc:creator>Jeff Maury (https://twitter.com/jeffmaury)</dc:creator><dc:date>2022-05-23T00:00:00Z</dc:date></entry></feed>
